// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "GetAll returns all existing notes",
                "operationId": "get-all-todoitems",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gotodo.ToDoItem"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new note and returns it",
                "operationId": "create-todoitem",
                "parameters": [
                    {
                        "description": "note",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gotodo.ToDoItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ToDoItem"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get returns a note by its id",
                "operationId": "get-todoitem",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ToDoItem"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a note by its id",
                "operationId": "update-todoitem",
                "parameters": [
                    {
                        "description": "note",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gotodo.ToDoItemRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ToDoItem"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a note by its id",
                "operationId": "delete-todoitem",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ToDoItem"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gotodo.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gotodo.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gotodo.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "The error message",
                    "type": "string"
                }
            }
        },
        "gotodo.NotFoundResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id of the item not found",
                    "type": "integer"
                },
                "message": {
                    "description": "The error message",
                    "type": "string"
                }
            }
        },
        "gotodo.ToDoItem": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "The description of the note",
                    "type": "string"
                },
                "id": {
                    "description": "The unique id of the note",
                    "type": "integer"
                },
                "title": {
                    "description": "The title of the note",
                    "type": "string"
                }
            }
        },
        "gotodo.ToDoItemRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "The author of the blog",
                    "type": "string"
                },
                "title": {
                    "description": "The author of the blog",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "127.0.0.1:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "GOTODO Api",
	Description:      "This is a simple typical todo list Go project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
